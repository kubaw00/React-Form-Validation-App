{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","username","email","pass","accept","message","errors","messages","username_incorrect","email_incorrect","password_incorrect","accept_incorrect","handleChange","e","type","target","name","value","setState","checked","handleSubmit","preventDefault","console","log","validation","handleValidation","correct","password","length","indexOf","this","setTimeout","className","onSubmit","noValidate","htmlFor","id","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11268102.chunk.js","sourcesContent":["import { findAllByDisplayValue } from '@testing-library/react';\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = { \n    username: \"\",\n    email: \"\",\n    pass: \"\",\n    accept: false,\n    message: '',\n    errors: {\n      username: false,\n      email: false,\n      pass: false,\n      accept: false,\n   }}\n\n   messages = {\n     username_incorrect: \"Nazwa musi być dłuższa niż 10 znaków i nie może zawierać spacji\",\n     email_incorrect: \"Brak @ w emailu\",\n     password_incorrect: \"Hasło musi mieć 8 znaków\",\n     accept_incorrect: \"Nie potwierdzona zgoda\",\n   }\n\n   handleChange = (e) => {\n     const type = e.target.type;\n     const name = e.target.name;\n    if(type === \"email\" || type === \"password\" || type === \"text\"){\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n     })\n    } else if (type ===  \"checkbox\") {\n      const checked = e.target.checked\n      this.setState({\n        [name]: checked\n     })\n    }\n   \n   }\n\n   componentDidUpdate() {\n     if(this.state.message !== ''){\n     setTimeout(()=> this.setState({message: ''}), 3000)\n     }\n   }\n\n   handleSubmit = (e) =>{\n     e.preventDefault();\n      console.log(\"działa\")\n    \n      const validation = this.handleValidation()\n\n     if(validation.correct) {\n      this.setState({ \n        username: \"\",\n        email: \"\",\n        pass: \"\",\n        accept: false,\n        message: 'Formularz został wysłany',\n        errors: {\n          username: false,\n          email: false,\n          pass: false,\n          accept: false,\n       }\n     }) \n    } else {\n     this.setState({\n      errors: {\n        username: !validation.username,\n        email: !validation.email,\n        pass: !validation.password,\n        accept: !validation.accept,\n     }\n     })\n   }\n  }\n  \n\n   handleValidation = () => {\n\n    let username = false; \n    let email = false; \n    let password = false; \n    let accept = false; \n    let correct = false;\n\n    if(this.state.username.length > 10 && this.state.username.indexOf(' ') === -1 ){\n      username = true;\n    }\n    if(this.state.email.indexOf('@') > -1){\n      email = true;\n    }\n    if(this.state.pass.length === 8) {\n      password = true;\n    }\n\n    if(this.state.accept){\n      accept = true;\n    }\n    if(username && email && password && accept){\n      correct = true;\n    }\n\n    return ({\n      username,\n      email,\n      password,\n      accept,\n      correct\n    })\n\n   }\n\n  render() { \n    return ( \n      <div className=\"app\">\n        <form onSubmit={this.handleSubmit} noValidate>\n          <label htmlFor=\"user\"> Twoje imię:\n          <input type=\"text\" id=\"user\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n          {this.state.errors.username && <span>{this.messages.username_incorrect}</span>}\n          </label>\n\n          \n          <label htmlFor=\"email\"> Twój email:\n          <input type=\"email\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\n          {this.state.errors.email && <span>{this.messages.email_incorrect}</span>}\n          </label>\n\n         \n          <label htmlFor=\"password\"> Twoje hasło:\n          <input type=\"password\" id=\"password\" name=\"pass\" value={this.state.pass} onChange={this.handleChange}/>\n          {this.state.errors.pass && <span>{this.messages.password_incorrect}</span>}\n          </label>\n        \n          <label htmlFor=\"accept\">\n          <input type=\"checkbox\" id=\"accept\" name=\"accept\" checked={this.state.accept}  onChange={this.handleChange}/>\n          Wyrażam zgodę na wszystko</label>\n          {this.state.errors.accept && <span>{this.messages.accept_incorrect}</span>}\n          <button>Zapisz się</button>\n\n          {this.state.message && <h3>{this.state.message}</h3>}\n        </form>\n      </div>\n     );\n  }\n}\n \nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}